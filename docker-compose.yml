version: "3"

services:
  db:
    container_name: main_database
    image: postgres:alpine3.19
    restart: always
    ports:
      - "5432:5432"
#    volumes:
#      - ./database:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    container_name: backend_api
    build:
      context: ./apps/backend/api
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - USERS_OPEN_REGISTRATION=${USERS_OPEN_REGISTRATION}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}
    #    ports:
    #      - "8000:8000"
    restart: always
    command: [ "/usr/src/app/docker/app.sh" ]
    depends_on:
      - db
      - selenium-hub
      - chrome
    networks:
      - default
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=8000
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=Host(`${DOMAIN?Variable not set}`) && PathPrefix(`/api`) || Host(`${DOMAIN?Variable not set}`) && PathPrefix(`/docs`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.entrypoints=http



  celery:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    build:
      context: ./apps/backend/api
    env_file:
      - .env
    container_name: celery_app
    command: [ "/usr/src/app/docker/celery.sh", "celery" ]
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - USERS_OPEN_REGISTRATION=${USERS_OPEN_REGISTRATION}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}
      - SELENIUM_HUB_HOST=selenium-hub
    volumes:
      - /chromedriver_cache:/root/.wdm/drivers/chromedriver
    restart: always
    networks:
      - default
    depends_on:
      - redis
      - backend
      - selenium-hub

  flower:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    build:
      context: ./apps/backend/api
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - USERS_OPEN_REGISTRATION=${USERS_OPEN_REGISTRATION}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}
      - SELENIUM_HUB_HOST=selenium-hub
    container_name: flower_app
    command: [ "/usr/src/app/docker/celery.sh", "flower" ]
    depends_on:
      - redis
      - celery
      - backend
    ports:
      - "8888:5555"
    restart: always
    networks:
      - default
  redis:
    image: redis:7.2.4-alpine3.19
    container_name: redis_app
    ports:
      - "6379:6379"
    networks:
      - default

  selenium-hub:
    image: selenium/hub:latest
    container_name: selenium-hub
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
    networks:
      - default
  chrome:
    image: selenium/node-chrome:beta
    shm_size: 1gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    networks:
      - default

# Сервис Traefik
  traefik:
    # Образ Docker
    image: traefik:3.0
    container_name: proxy-panel
    # Отображение портов
    ports:
      # HTTP (80)
      - "80:80"
      # HTTPS (443)
      - "443:443"
    # Перезапуск сервиса
#    restart: always
    # Метки для Traefik
    labels:
      # Включение Traefik для этого сервиса
      - traefik.enable=true
      # Подключение к сети traefik-public
      - traefik.docker.network=traefik-public
      # Порт панели управления Traefik
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080
      # Настройка маршрутизаторов
      # --- Панель управления Traefik
      - traefik.http.routers.traefik-dashboard-http.entrypoints=http
      - traefik.http.routers.traefik-dashboard-http.rule=Host(`traefik.${DOMAIN?Variable not set}`)
#      - traefik.http.routers.traefik-dashboard-https.entrypoints=https
#      - traefik.http.routers.traefik-dashboard-https.rule=Host(`traefik.${DOMAIN?Variable not set}`)
#      - traefik.http.routers.traefik-dashboard-https.tls=true
#      - traefik.http.routers.traefik-dashboard-https.tls.certresolver=le
#      - traefik.http.routers.traefik-dashboard-https.service=api@internal
      # --- Перенаправление HTTP на HTTPS
#      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
#      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
#      - traefik.http.routers.traefik-dashboard-http.middlewares=https-redirect
      # --- HTTP-аутентификация для панели управления
      - traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}
#      - traefik.http.routers.traefik-dashboard-https.middlewares=admin-auth
    # Тома для хранения данных
    volumes:
      # Сокет Docker
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Сертификаты
      - traefik-public-certificates:/certificates
    # Команды для запуска Traefik
    command:
      # Включение Docker
      - --providers.docker
      # Обработка только явно отмеченных сервисов
      - --providers.docker.exposedbydefault=true
      # Точки входа (http и https)
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      # Получение сертификатов Let's Encrypt
#      - --certificatesresolvers.le.acme.email=${EMAIL?Variable not set}
#      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
#      - --certificatesresolvers.le.acme.tlschallenge=true
      # Логи
      - --accesslog
      - --log
      # Включение панели управления
      - --api.dashboard=true
      - --api.insecure=true
    # Подключение к сети
    networks:
      # Сеть traefik-public
      - traefik-public

# Определение томов
volumes:
  # Том для сертификатов
  traefik-public-certificates:

# Определение сетей
networks:
  # Сеть traefik-public
  traefik-public:
    # Внешняя сеть
    external: true